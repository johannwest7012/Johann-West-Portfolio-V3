{"version":3,"file":"component---src-pages-projects-[id]-js-f1e240204774d89e052d.js","mappings":"qRAiCA,MA9BA,SAAsBA,GAAe,IAAd,QAAEC,GAASD,EA2BhC,OA1BAE,EAAAA,EAAAA,YAAU,KAWR,MAAMC,EAASC,SAASC,cAAc,UAUtC,OATAF,EAAOG,IAAM,qCACbH,EAAOI,OAAQ,EACfJ,EAAOK,OAAS,KACdC,OAAOC,GAAGC,OAAM,IAZT,IAAIF,OAAOC,GAAGE,OAAO,iBAAkB,CAC5CX,QAASA,EACTY,MAAO,OACPC,OAAQ,SAS2B,EAGvCV,SAASW,KAAKC,YAAYb,GAGnB,KACLC,SAASW,KAAKE,YAAYd,EAAO,CAClC,GACA,CAACF,IAEGiB,EAAAA,cAAA,OAAKC,GAAG,kBACjB,EC4JA,MAlLgBnB,IAAa,IAAZ,GAAEmB,GAAInB,EACrB,MAAM,EAACoB,EAAU,EAACC,IAAcC,EAAAA,EAAAA,WAAS,IAClCC,EAAOC,GAAYN,EAAAA,SAAe,GAGjCO,EAAUC,EAAAA,EAASC,MAAMC,GAASA,EAAKT,KAAOA,IAEpDU,QAAQC,IAAI,WAAYL,GACxB,MAAMM,GAAYC,EAAAA,EAAAA,QAAO,OAKzB9B,EAAAA,EAAAA,YAAU,KACN+B,IAAAA,cAAqB,CACjBF,UAAWA,EAAUG,QACrBC,SAAU,MACVC,MAAM,EACNC,UAAU,EACVC,cAAeC,EAAQ,OACzB,GACH,IAEH,MAAMC,EAAQA,KACZ/B,OAAOgC,cAActB,EAAGe,SACxBb,GAAW,EAAM,EAGbqB,EAAQxB,EAAAA,OAAa,MAE3BA,EAAAA,WAAgB,KACdwB,EAAMR,QAAUzB,OAAOkC,aAAY,KACjCnB,GAAUoB,GAASA,EAAO,GAAE,GAC3B,KACI,IAAMJ,MACZ,IAEHtB,EAAAA,WAAgB,KACA,IAAVK,GACFiB,GACF,GACC,CAACjB,IAEJM,QAAQC,IAAI,aAAcX,GAE1B,IAAI0B,EAAW,KACXC,EAAc,KASlB,OARI3B,EAAK,EAAI,IACT0B,EAAW,cAAkBE,SAAS5B,GAAM,IAE5CA,EAAKO,EAAAA,EAASsB,SAChBF,EAAc,cAAkBC,SAAS5B,GAAM,IAK7CD,EAAAA,cAAAA,EAAAA,SAAA,KACKE,EACLF,EAAAA,cAAA,OAAK+B,UAAU,2BACb/B,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,OAAK+B,UAAU,kBAGT/B,EAAAA,cAAA,WACKO,EACGP,EAAAA,cAAA,OAAK+B,UAAU,WACX/B,EAAAA,cAAA,OAAK+B,UAAU,cAAcC,MAAO,CAAEC,WAAY1B,EAAQ0B,aACtDjC,EAAAA,cAAA,OAAK+B,UAAU,WACZJ,EAAa3B,EAAAA,cAAA,KAAGkC,KAAMP,EAAUI,UAAU,gBACrC/B,EAAAA,cAAA,OAAK+B,UAAU,YAAY3C,IAAK+C,EAAAA,KAAY,YAEzC,KAEPnC,EAAAA,cAAA,KAAGkC,KAAK,IAAIH,UAAU,gBAAe,QAGpCH,EAAgB5B,EAAAA,cAAA,KAAGkC,KAAMN,EAAaG,UAAU,gBAAe,OAE5D/B,EAAAA,cAAA,OAAK+B,UAAU,YAAY3C,IAAKgD,EAAAA,MAC7B,MAGXpC,EAAAA,cAAA,OAAK+B,UAAU,aAAa3C,IAAKmB,EAAQ8B,QAASC,IAAI,UAE1DtC,EAAAA,cAAA,OAAK+B,UAAU,qBACX/B,EAAAA,cAAA,OAAK+B,UAAU,SACX/B,EAAAA,cAAA,OAAK+B,UAAU,mBACX/B,EAAAA,cAAA,QAAM+B,UAAU,gBAAgBxB,EAAQgC,KAAK,KAC5ChC,EAAQiC,KACLxC,EAAAA,cAAA,KAAGkC,KAAM3B,EAAQkC,UAAWV,UAAU,kBAAiB,qBAEnD/B,EAAAA,cAAA,OACI+B,UAAU,sBACV3C,IAAK+C,EAAAA,MAGb,MAERnC,EAAAA,cAAA,OAAK+B,UAAU,eAEnB/B,EAAAA,cAAA,WACIA,EAAAA,cAAA,OAAK+B,UAAU,iBACX/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAG+B,UAAU,mBAAkB,eAEnC/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAG+B,UAAU,wBACRxB,EAAQmC,YAIrB1C,EAAAA,cAAA,OAAK+B,UAAU,iBACX/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAG+B,UAAU,mBAAkB,aAEnC/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAG+B,UAAU,wBAAwBxB,EAAQoC,UAGrD3C,EAAAA,cAAA,OAAK+B,UAAU,iBACX/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAG+B,UAAU,mBAAkB,mBAEnC/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAG+B,UAAU,wBACRxB,EAAQqC,gBAIpBrC,EAAQsC,OACL7C,EAAAA,cAAA,OAAK+B,UAAU,iBACX/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAG+B,UAAU,mBAAkB,aAEnC/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAGkC,KAAM3B,EAAQuC,aACb9C,EAAAA,cAAA,OAAKZ,IAAK2D,EAAAA,GAAYhB,UAAU,gBAI5C,KACJ/B,EAAAA,cAAA,OAAK+B,UAAU,iBACX/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAG+B,UAAU,mBAAkB,kBAEnC/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,KAAG+B,UAAU,4BACRxB,EAAQyC,eAIrBhD,EAAAA,cAAA,OAAK+B,UAAU,kBACX/B,EAAAA,cAACiD,EAAa,CAAClE,QAASwB,EAAQ2C,WAChClD,EAAAA,cAAA,KAAG+B,UAAU,sBAAqB,uBACjCxB,EAAQ4C,WAAWC,KAAI,CAAC1C,EAAM2C,IAC3BrD,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,OACIZ,IAAKsB,EAAK4C,MACVvB,UAAU,iBACVwB,IAAKF,IAETrD,EAAAA,cAAA,KAAG+B,UAAU,sBAAsBrB,EAAK8C,gBAQhExD,EAAAA,cAAA,WAAK,sCAIlB,E,oBC3KMyD,IAAS,CACxBC,OAAQA,IAAM,uCACdC,QAJaD,IAAM1D,EAAAA,cAAA,WAAK,cAe1B,MARoBlB,IAAW,IAAV,GAACmB,GAAGnB,EACvB,OACEkB,EAAAA,cAAC4D,EAAAA,GAAQ,CAACC,MAAOA,EAAAA,GACb7D,EAAAA,cAAC8D,EAAAA,EAAY,MACf9D,EAAAA,cAAC+D,EAAO,CAAC9D,GAAIA,IACJ,C","sources":["webpack://gatsby-starter-hello-world/./src/components/VideoPlayer/VideoPlayer.jsx","webpack://gatsby-starter-hello-world/./src/components/Project/index.jsx","webpack://gatsby-starter-hello-world/./src/pages/projects/[id].js"],"sourcesContent":["\nimport React, { useEffect } from 'react';\n\nfunction YouTubePlayer({ videoId }) {\n  useEffect(() => {\n    // This function creates the YouTube player after the API has loaded\n    function createPlayer() {\n      return new window.YT.Player('youtube-player', {\n        videoId: videoId,\n        width: '1000',\n        height: '500',\n      });\n    }\n\n    // Load the YouTube API\n    const script = document.createElement('script');\n    script.src = 'https://www.youtube.com/iframe_api';\n    script.async = true;\n    script.onload = () => {\n      window.YT.ready(() => createPlayer());\n    };\n\n    document.body.appendChild(script);\n\n    // Clean up the script when the component unmounts\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [videoId]);\n\n  return <div id=\"youtube-player\"></div>;\n}\n\nexport default YouTubePlayer;\n\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.scss\";\nimport SectionHeader from \"../SectionHeader\";\nimport { projects, backicon, forwardicon, githubicon } from \"../../constants\";\nimport lottie from \"lottie-web\";\nimport YouTubePlayer from \"../VideoPlayer/VideoPlayer\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { motion } from \"framer-motion\";\n\nconst Project = ({ id }) => {\n  const [preloader, setPreload] = useState(true);\n  const [timer, setTimer] = React.useState(1);\n\n\n    const project = projects.find((item) => item.id === id);\n\n    console.log(\"Project:\", project);\n    const container = useRef(null);\n\n    // const github = project.github;\n    // const live = project.live;\n\n    useEffect(() => {\n        lottie.loadAnimation({\n            container: container.current,\n            renderer: \"svg\",\n            loop: true,\n            autoplay: true,\n            animationData: require(\"../../animations/animation2.json\"),\n        });\n    }, []);\n\n    const clear = () => {\n      window.clearInterval(id.current);\n      setPreload(false);\n    };\n\n    const refid = React.useRef(null);\n\n    React.useEffect(() => {\n      refid.current = window.setInterval(() => {\n        setTimer((time) => time - 1);\n      }, 1000);\n      return () => clear();\n    }, []);\n  \n    React.useEffect(() => {\n      if (timer === 0) {\n        clear();\n      }\n    }, [timer]);\n\n    console.log(\"project id\", id);\n\n    var backlink = null;\n    var forwardlink = null;\n    if (id - 1 > 0) {\n        backlink = \"/projects/\" + `${parseInt(id) - 1}`;\n    } \n    if (id < projects.length){\n      forwardlink = \"/projects/\" + `${parseInt(id) + 1}`;\n    }\n    \n    \n    return (\n        <>\n            {preloader ? (\n        <div className=\"loader-wrapper absolute\">\n          <h1>Portfolio</h1>\n          <h2>Johann West</h2>\n          <div className=\"loading-line\" />\n        </div>\n      ) : (\n                <div>\n                    {project ? (\n                        <div className=\"wrapper\">\n                            <div className=\"behind-hero\" style={{ background: project.background }}>\n                                <div className=\"top-row\">\n                                  {backlink ? ( <a href={backlink} className=\"back-to-home\">\n                                        <img className=\"back-icon\" src={backicon} />\n                                        Previous\n                                    </a>): null}\n                                    \n                                    <a href=\"/\" className=\"back-to-home\">\n                                        Home\n                                    </a>\n                                    {forwardlink ? ( <a href={forwardlink} className=\"back-to-home\">\n                                        Next\n                                        <img className=\"back-icon\" src={forwardicon} />\n                                    </a>): null}\n                                   \n                                </div>\n                                <img className=\"hero-image\" src={project.heroimg} alt=\"Hero\" />\n                            </div>\n                            <div className=\"project-container\">\n                                <div className=\"inner\">\n                                    <div className=\"inner-title-row\">\n                                        <span className=\"project-name\">{project.name} </span>\n                                        {project.live ? (\n                                            <a href={project.live_link} className=\"access-project\">\n                                                Access the project\n                                                <img\n                                                    className=\"access-project-icon\"\n                                                    src={backicon}\n                                                />\n                                            </a>\n                                        ) : null}\n                                    </div>\n                                    <div className=\"separator\"></div>\n                                </div>\n                                <div>\n                                    <div className=\"col-container\">\n                                        <div className=\"col\">\n                                            <p className=\"project-subhead\">Category -</p>\n                                        </div>\n                                        <div className=\"col\">\n                                            <p className=\"project-subhead-text\">\n                                                {project.category}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-container\">\n                                        <div className=\"col\">\n                                            <p className=\"project-subhead\">Client -</p>\n                                        </div>\n                                        <div className=\"col\">\n                                            <p className=\"project-subhead-text\">{project.client}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-container\">\n                                        <div className=\"col\">\n                                            <p className=\"project-subhead\">Technologies -</p>\n                                        </div>\n                                        <div className=\"col\">\n                                            <p className=\"project-subhead-text\">\n                                                {project.technologies}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    {project.github ? (\n                                        <div className=\"col-container\">\n                                            <div className=\"col\">\n                                                <p className=\"project-subhead\">Github -</p>\n                                            </div>\n                                            <div className=\"col\">\n                                                <a href={project.github_link}>\n                                                    <img src={githubicon} className=\"git-icon\" />\n                                                </a>\n                                            </div>\n                                        </div>\n                                    ) : null}\n                                    <div className=\"col-container\">\n                                        <div className=\"col\">\n                                            <p className=\"project-subhead\">Description -</p>\n                                        </div>\n                                        <div className=\"col\">\n                                            <p className=\"description-subhead-text\">\n                                                {project.description}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div className=\"image-list-div\">\n                                        <YouTubePlayer videoId={project.video_id} />\n                                        <p className=\"image-list-caption\"> Demo Video (5 min)</p>\n                                        {project.image_list.map((item, index) => (\n                                            <>\n                                                <img\n                                                    src={item.image}\n                                                    className=\"image-list-img\"\n                                                    key={index}\n                                                />\n                                                <p className=\"image-list-caption\">{item.caption}</p>\n                                            </>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <div>This wasn't supposed to happen :/</div>\n                    )}\n                </div>\n      )}\n        </>\n    );\n};\n\nexport default Project;\n","import React from \"react\";\nimport Loadable from \"react-loadable\";\nimport store from \"../../store\";\n\nimport { Provider } from \"react-redux\";\nimport Project from \"../../components/Project\";\nimport Home from \"../../containers/Home\";\nimport CustomCursor from \"../../CustomCursor\";\n\n\nconst loader = () => <div>Loading.</div>;\n//\nconst HomeLazy = Loadable({\n  loader: () => import(\"../../containers/Home\"), \n  loading: loader,\n});\n\nconst ProjectPage = ({id}) => {\n  return (\n    <Provider store={store}>\n        <CustomCursor/>\n      <Project id={id} />\n    </Provider>\n  );\n};\nexport default ProjectPage;"],"names":["_ref","videoId","useEffect","script","document","createElement","src","async","onload","window","YT","ready","Player","width","height","body","appendChild","removeChild","React","id","preloader","setPreload","useState","timer","setTimer","project","projects","find","item","console","log","container","useRef","lottie","current","renderer","loop","autoplay","animationData","require","clear","clearInterval","refid","setInterval","time","backlink","forwardlink","parseInt","length","className","style","background","href","backicon","forwardicon","heroimg","alt","name","live","live_link","category","client","technologies","github","github_link","githubicon","description","YouTubePlayer","video_id","image_list","map","index","image","key","caption","Loadable","loader","loading","Provider","store","CustomCursor","Project"],"sourceRoot":""}