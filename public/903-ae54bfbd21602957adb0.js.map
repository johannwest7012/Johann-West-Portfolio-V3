{"version":3,"file":"903-ae54bfbd21602957adb0.js","mappings":"gPAUe,SAASA,EAAcC,IAEpCC,EAAAA,EAAAA,YAAU,KACR,IAAKD,EAAO,OAEZ,IAAIE,EAAa,KAEjB,MAAMC,EAAWC,SAASC,cAAc,mBACxC,IAAKF,EAAU,OAGfD,EAAa,IAAII,EAAAA,QAAiB,CAChCC,GAAIJ,EACJK,aAAc,CAACC,EAAI,EAAGC,EAAG,GACzBC,QAAQ,EACRC,WAAY,EACZC,MAAO,cAGTX,EAAWY,GAAG,UAAU,KACtBC,EAAAA,EAAcC,QAAQ,IAGxBD,EAAAA,EAAcE,cAAcd,EAAU,CACpCe,SAAAA,CAAUC,GACR,OAAIjB,EACEkB,UAAUC,OAGLnB,EAAWoB,SAASH,EAAO,EAAG,GAG9BjB,EAAWqB,OAAOC,SAASD,OAAOb,EAGtC,IACT,EACAe,UAAAA,CAAWN,GACT,OAAIjB,EACEkB,UAAUC,OAGLnB,EAAWoB,SAASH,EAAO,EAAG,GAG9BjB,EAAWqB,OAAOC,SAASD,OAAOd,EAGtC,IACT,IAGF,MAAMiB,EAAWA,KACXxB,GACFA,EAAWc,QACb,EAMF,OAHAD,EAAAA,EAAcY,iBAAiB,UAAWD,GAC1CX,EAAAA,EAAca,UAEP,KACD1B,IACFa,EAAAA,EAAcc,oBAAoB,UAAWH,GAC7CxB,EAAW4B,UACX5B,EAAa,KACb6B,QAAQC,IAAI,OAAQ9B,GACtB,CACD,GACA,CAACF,GACN,CAxEAiC,EAAAA,GAAKC,eAAenB,EAAAA,E","sources":["webpack://gatsby-starter-hello-world/./src/hooks/useLocoScroll.js"],"sourcesContent":["import gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"locomotive-scroll/src/locomotive-scroll.scss\";\nimport LocomotiveScroll from \"locomotive-scroll\";\n\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function useLocoScroll(start) {\n\n  useEffect(() => {\n    if (!start) return; \n\n    let locoScroll = null;\n\n    const scrollEl = document.querySelector(\"#main-container\");\n    if (!scrollEl) return;\n\n\n    locoScroll = new LocomotiveScroll({\n      el: scrollEl,\n      initPosition: {x : 0, y: 0},\n      smooth: true,\n      multiplier: 1,\n      class: \"is-reveal\",\n    });\n    \n    locoScroll.on(\"scroll\", () => {\n      ScrollTrigger.update();\n    });\n\n    ScrollTrigger.scrollerProxy(scrollEl, {\n      scrollTop(value) {\n        if (locoScroll) {\n          if (arguments.length){\n     \n\n            return locoScroll.scrollTo(value, 0, 0)\n          }\n          else { \n            return locoScroll.scroll.instance.scroll.y;\n          }\n        }\n        return null;\n      },\n      scrollLeft(value) {\n        if (locoScroll) {\n          if (arguments.length){\n   \n\n            return locoScroll.scrollTo(value, 0, 0)\n          }\n          else { \n            return locoScroll.scroll.instance.scroll.x;\n          }\n        }\n        return null;\n      },\n    });\n\n    const lsUpdate = () => {\n      if (locoScroll) {\n        locoScroll.update();\n      }\n    };\n\n    ScrollTrigger.addEventListener(\"refresh\", lsUpdate);\n    ScrollTrigger.refresh();\n\n    return () => {\n      if (locoScroll) {\n        ScrollTrigger.removeEventListener(\"refresh\", lsUpdate);\n        locoScroll.destroy();\n        locoScroll = null;\n        console.log(\"Kill\", locoScroll);\n      }\n    };\n  }, [start]);\n}\n"],"names":["useLocoScroll","start","useEffect","locoScroll","scrollEl","document","querySelector","LocomotiveScroll","el","initPosition","x","y","smooth","multiplier","class","on","ScrollTrigger","update","scrollerProxy","scrollTop","value","arguments","length","scrollTo","scroll","instance","scrollLeft","lsUpdate","addEventListener","refresh","removeEventListener","destroy","console","log","gsap","registerPlugin"],"sourceRoot":""}